#!/usr/bin/env ruby

require 'rubygems'
require 'net/ssh'
require_relative 'configuration'

# server action primary command #
cmd_base = 'racadm serveraction power'
cmd_runn = '/sbin/shutdown -h now'

# SSH (primary):
# iDRAC accessable via
# ssh and therefore 
# controlled remotely 
def ssh_primary(host, cmd, cf)
   
   user = cf.get_user
   pass = cf.get_passwd

   begin
      ssh = Net::SSH.start(host, user, :password => pass)
      out = ssh.exec!(cmd)
      ssh.close
      puts out
   rescue StandardError => e
      puts e.to_s
   end 

end

# Parse arguments and
# complete power cycle
# as specified by command
if ARGV[0] and (ARGV[0] == 'up' or ARGV[0] == 'down')

   cmd_base += ARGV[0]
   tt =  if ARGV[0].upcase == 'UP' then 'INIT' else ARGV[0].upcase end

   if ARGV[0] == 'down'
         config = Configuration.new('shutdown')
         cmd = cmd_runn
      else
         config = Configuration.new('startup')
         cmd = cmd_base 
   end

   addr_list = config.get_serverlist

   if !ARGV[1] 

      addr_list.each_with_index do |ip, index|
      puts "powering #{tt} unit @#{ip}"     
      puts "#{cmd} - #{ip}"
      ssh_primary(ip, cmd, config)
      if index != addr_list.size - 1 
         sleep 15 
      end
      end
      puts "*===========================* "
      puts "  POWER #{tt} CYCLE COMPLETE  "
      puts "*===========================* "

   elsif ARGV[1]

      if addr_list.include? ARGV[1]
      puts "powering #{tt} unit @#{ARGV[1]}"
      puts "#{cmd} - #{ARGV[1]}"
      ssh_primary(ARGV[1], cmd, config) 
      puts "*=====================*   "
      puts "  POWER #{tt} COMPLETE    "
      puts "*=====================*   "

      else

      puts "destination '#{ARGV[1]}' not listed!"

      end

   end

else

usage = %q{
*usage*:
                                          
 must include a directive 'up/down'       
 and an address parameter @#{hostname/ip}.
                                          
 ex: $~ power-mg up 192.168.1.123          
                                           
}

puts usage

end
